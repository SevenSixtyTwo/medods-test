services:
  postgres:
    container_name: postgres_container
    image: postgres:17.1-alpine3.20
    command: 
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "auth_service"
      POSTGRES_USER: "pguser"
      POSTGRES_PASSWORD: "1212" 
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../db:/docker-entrypoint-initdb.d
      - auth_service-data:/var/lib/postgresql/data
    ports:
      - "6432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pguser -d auth_service"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    networks:
      - test_network 

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:8.13
    environment:
      PGADMIN_DEFAULT_EMAIL: "pguser@pguser.com"
      PGADMIN_DEFAULT_PASSWORD: "1212"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - test_network

  api:
    container_name: api_container
    build:
      context: ..
      dockerfile: docker/Dockerfile
    cap_drop:
      - all
    restart: on-failure 
    deploy:
      resources:
        limits:
          cpus: '3'
          memory: 1G
    image: api
    ports:
      - "3030:3030"
    read_only: true
    security_opt:
      - "no-new-privileges=true"
    depends_on:
      - postgres
    networks:
      - test_network

volumes:
  auth_service-data:
  pgadmin-data:

networks:
  test_network:
    driver: bridge

# docker-compose -f ./docker/docker-compose.yml up -d
# docker-compose -f ./docker/docker-compose.yml down -v